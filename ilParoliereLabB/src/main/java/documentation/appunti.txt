- Avvio @Momo
L'applicazione prevede un modulo server e un modulo client.
Il server si interfaccia con un DBMS e un dizionario di lingua italiana.
Il client pervede invece la gestione a livello giocatore e richieste a DBMS.
Il server quando si avvia chiede sempre(??) le credenziali per accedere al server DBMS,nome del DB di appoggio per l'infrastruttura ed IP host.
All'avvio server ip si collega con il profilo amministratore, se non esiste propone la creazione di un uid e pwd.

- Matrice @Momo 20/04/14
    Matrix.CreateDices(); 
Inizializza i dadi.
    String[][] matgrice =  Matrix.getMatrix();
Restituisce una matrice 4x4 con i dati, importante che le posizioni dei dadi cambiano.

Boolean b = Matrix.parseWord(String[][] matgrice,String word) : restituisce se la parola Ã¨ valida nella ricerca della matrice



1) 
a- SELECT DISTINCT ON(RoomId, GameId) RoomId, GameId, NickName, MAX(TotalPoints) AS TotalPoints
FROM (SELECT SUM(Score) AS TotalPoints, GameId , RoomId, NickName
      FROM UsersWords 
      WHERE NickName=NickName
	  GROUP BY GameId, RoomId, NickName
      ORDER BY TotalPoints DESC) MaxScore
GROUP BY GameId, RoomId, NickName
ORDER BY RoomId, GameId DESC

b- 
SELECT NickName, MAX(GameSession) AS GameSession
FROM (
SELECT NickName, COUNT(Distinct (RoomId,Gameid)) AS GameSession 
FROM UsersWords
WHERE NickName= NickName
GROUP BY NickName) NSessions
GROUP BY NickName
ORDER BY GameSession DESC LIMIT 1
c-
SELECT DISTINCT ON (RoomId , GameId)RoomId,GameId, MAX(AverageScore) AS AverageScore, NickName
FROM (
SELECT AVG(Score):: numeric(6,2) AS AverageScore, GameId , RoomId, NickName 
      FROM UsersWords 
      WHERE NickName=NickName
      GROUP BY GameId, RoomId, NickName) AvgScore
GROUP BY GameId, NickName, RoomId
ORDER BY GameId DESC